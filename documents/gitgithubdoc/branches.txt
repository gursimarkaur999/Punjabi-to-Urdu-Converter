
ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean

ACER@Sehaj MINGW64 /e/temp (master)
$ git log
commit 3a531b4bbe2bb22522dd48acd5f6da9e8349b041 (HEAD -> master, origin/master)
Author: Gursimar <gursimarkaur725@gmail.com>
Date:   Thu Jan 9 20:11:54 2020 +0530

    gi updated

commit 33f8e1183cf756d77b18855f8e18b20f27591fbb
Author: Gursimar <gursimarkaur725@gmail.com>
Date:   Thu Jan 9 19:51:48 2020 +0530

    Deleted files and modified newdoc

commit cb4353bab4b9f641e382748a65c8264be6e66cf0
Author: Gursimar <gursimarkaur725@gmail.com>
Date:   Thu Jan 9 19:50:37 2020 +0530

    Initial commit

ACER@Sehaj MINGW64 /e/temp (master)
$ git branch
* master

ACER@Sehaj MINGW64 /e/temp (master)
$ git checkout -b "temporary"
Switched to a new branch 'temporary'

ACER@Sehaj MINGW64 /e/temp (temporary)
$ git status
On branch temporary
nothing to commit, working tree clean

ACER@Sehaj MINGW64 /e/temp (temporary)
$ touch temp1 temp2

ACER@Sehaj MINGW64 /e/temp (temporary)
$ ls
 ccvdghc.pub   gitignoretest/   new.pub       temp1
 dir/          hello/           newdoc.docx   temp2
 gi           'New folder'/     t1.log        ytfth.pptx

ACER@Sehaj MINGW64 /e/temp (temporary)
$ ls
 ccvdghc.pub   gitignoretest/   new.pub       temp1
 dir/          hello/           newdoc.docx   temp2
 gi           'New folder'/     t1.log        ytfth.pptx

ACER@Sehaj MINGW64 /e/temp (temporary)
$ ls
 ccvdghc.pub   gitignoretest/   new.pub       temp1
 dir/          hello/           newdoc.docx   temp2
 gi           'New folder'/     t1.log        ytfth.pptx

ACER@Sehaj MINGW64 /e/temp (temporary)
$ git status
On branch temporary
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        temp1
        temp2

nothing added to commit but untracked files present (use "git add" to track)

ACER@Sehaj MINGW64 /e/temp (temporary)
$ git commit -a -m "modifying temporary files"
On branch temporary
Untracked files:
        temp1
        temp2

nothing added to commit but untracked files present

ACER@Sehaj MINGW64 /e/temp (temporary)
$ git status
On branch temporary
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        temp1
        temp2

nothing added to commit but untracked files present (use "git add" to track)

ACER@Sehaj MINGW64 /e/temp (temporary)
$ git add .


ACER@Sehaj MINGW64 /e/temp (temporary)
$

ACER@Sehaj MINGW64 /e/temp (temporary)
$ git commit -m "modifying temporary files"
[temporary 10de2fb] modifying temporary files
 2 files changed, 15 insertions(+)
 create mode 100644 temp1
 create mode 100644 temp2

ACER@Sehaj MINGW64 /e/temp (temporary)
$ git log
commit 10de2fb07584e1f72d1badfcb59fe816d5da24e9 (HEAD -> temporary)
Author: Gursimar <gursimarkaur725@gmail.com>
Date:   Fri Jan 10 14:05:59 2020 +0530

    modifying temporary files

commit 3a531b4bbe2bb22522dd48acd5f6da9e8349b041 (origin/master, master)
Author: Gursimar <gursimarkaur725@gmail.com>
Date:   Thu Jan 9 20:11:54 2020 +0530

    gi updated

commit 33f8e1183cf756d77b18855f8e18b20f27591fbb
Author: Gursimar <gursimarkaur725@gmail.com>
Date:   Thu Jan 9 19:51:48 2020 +0530

    Deleted files and modified newdoc

commit cb4353bab4b9f641e382748a65c8264be6e66cf0
Author: Gursimar <gursimarkaur725@gmail.com>
Date:   Thu Jan 9 19:50:37 2020 +0530

    Initial commit

ACER@Sehaj MINGW64 /e/temp (temporary)
$ git branhc
git: 'branhc' is not a git command. See 'git --help'.

The most similar command is
        branch

ACER@Sehaj MINGW64 /e/temp (temporary)
$ git checkout master
Switched to branch 'master'
Your branch is up to date with 'origin/master'.

ACER@Sehaj MINGW64 /e/temp (master)
$ git merge temporary
Updating 3a531b4..10de2fb
Fast-forward
 temp1 |  0
 temp2 | 15 +++++++++++++++
 2 files changed, 15 insertions(+)
 create mode 100644 temp1
 create mode 100644 temp2

ACER@Sehaj MINGW64 /e/temp (master)
$ git branch
* master
  temporary

ACER@Sehaj MINGW64 /e/temp (master)
$ git checkout -b "second"
Switched to a new branch 'second'

ACER@Sehaj MINGW64 /e/temp (second)
$ git status
On branch second
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hgvhghgh.rtf

nothing added to commit but untracked files present (use "git add" to track)

ACER@Sehaj MINGW64 /e/temp (second)
$ git commit -a -m "second modifications"
On branch second
Untracked files:
        hgvhghgh.rtf

nothing added to commit but untracked files present

ACER@Sehaj MINGW64 /e/temp (second)
$ git add .

ACER@Sehaj MINGW64 /e/temp (second)
$ git commit -a -m "second modifications"
[second 8915933] second modifications
 1 file changed, 1 insertion(+)
 create mode 100644 hgvhghgh.rtf

ACER@Sehaj MINGW64 /e/temp (second)
$ git status
On branch second
nothing to commit, working tree clean

ACER@Sehaj MINGW64 /e/temp (second)
$ git branch
  master
* second
  temporary

ACER@Sehaj MINGW64 /e/temp (second)
$ git checkout master
Switched to branch 'master'
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

ACER@Sehaj MINGW64 /e/temp (master)
$ git push -d origin second
error: unable to delete 'second': remote ref does not exist
error: failed to push some refs to 'https://github.com/gursimarkaur999/demo.git'

ACER@Sehaj MINGW64 /e/temp (master)
$ git push origin second
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 8 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 574 bytes | 143.00 KiB/s, done.
Total 6 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 1 local object.
remote:
remote: Create a pull request for 'second' on GitHub by visiting:
remote:      https://github.com/gursimarkaur999/demo/pull/new/second
remote:
To https://github.com/gursimarkaur999/demo.git
 * [new branch]      second -> second

ACER@Sehaj MINGW64 /e/temp (master)
$ git push origin temporary
Total 0 (delta 0), reused 0 (delta 0)
remote:
remote: Create a pull request for 'temporary' on GitHub by visiting:
remote:      https://github.com/gursimarkaur999/demo/pull/new/temporary
remote:
To https://github.com/gursimarkaur999/demo.git
 * [new branch]      temporary -> temporary

ACER@Sehaj MINGW64 /e/temp (master)
$ git branch
* master
  second
  temporary

ACER@Sehaj MINGW64 /e/temp (master)
$ git branch -v
* master    10de2fb [ahead 1] modifying temporary files
  second    8915933 second modifications
  temporary 10de2fb modifying temporary files

ACER@Sehaj MINGW64 /e/temp (master)
$ git branch --merged
* master
  temporary

ACER@Sehaj MINGW64 /e/temp (master)
$ git branch --no-merged
  second

ACER@Sehaj MINGW64 /e/temp (master)
$ git branch -d temporary
Deleted branch temporary (was 10de2fb).

ACER@Sehaj MINGW64 /e/temp (master)
$ git branch
* master
  second

ACER@Sehaj MINGW64 /e/temp (master)
$ git push -d temporary
fatal: --delete doesn't make sense without any refs

ACER@Sehaj MINGW64 /e/temp (master)
$ git push -d second
fatal: --delete doesn't make sense without any refs

ACER@Sehaj MINGW64 /e/temp (master)
$ git push -d origin second
To https://github.com/gursimarkaur999/demo.git
 - [deleted]         second

ACER@Sehaj MINGW64 /e/temp (master)
$ git branhc
git: 'branhc' is not a git command. See 'git --help'.

The most similar command is
        branch

ACER@Sehaj MINGW64 /e/temp (master)
$ git branch
* master
  second

ACER@Sehaj MINGW64 /e/temp (master)
$
