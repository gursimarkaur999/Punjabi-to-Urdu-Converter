
ACER@Sehaj MINGW64 /e/temp (master)
$ touch t1

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   .gitignore
        new file:   New folder/adhua.pptx
        new file:   gitignoretest/dsfs.docx
        new file:   hello/dir/jhddgdsj.pptx
        new file:   hello/shdbs.docx
        modified:   t1.log

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        t1


ACER@Sehaj MINGW64 /e/temp (master)
$ git mv t1 text
fatal: not under version control, source=t1, destination=text

ACER@Sehaj MINGW64 /e/temp (master)
$ git mv t1.txt text.txt
fatal: bad source, source=t1.txt, destination=text.txt

ACER@Sehaj MINGW64 /e/temp (master)
$ git add .

ACER@Sehaj MINGW64 /e/temp (master)
$ git mv t1.txt text.txt
fatal: bad source, source=t1.txt, destination=text.txt

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   .gitignore
        new file:   New folder/adhua.pptx
        new file:   gitignoretest/dsfs.docx
        new file:   hello/dir/jhddgdsj.pptx
        new file:   hello/shdbs.docx
        new file:   t1
        modified:   t1.log


ACER@Sehaj MINGW64 /e/temp (master)
$ git commit -m "7 jan"
[master a849476] 7 jan
 7 files changed, 10 insertions(+), 2 deletions(-)
 create mode 100644 New folder/adhua.pptx
 create mode 100644 gitignoretest/dsfs.docx
 create mode 100644 hello/dir/jhddgdsj.pptx
 create mode 100644 hello/shdbs.docx
 create mode 100644 t1

ACER@Sehaj MINGW64 /e/temp (master)
$ git mv t1.txt text.txt
fatal: bad source, source=t1.txt, destination=text.txt

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
nothing to commit, working tree clean

ACER@Sehaj MINGW64 /e/temp (master)
$ git mv t1 file

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        renamed:    t1 -> file


ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        renamed:    t1 -> file


ACER@Sehaj MINGW64 /e/temp (master)
$ git log
commit a849476712b7f584923c36e05a6a639fa0a27831 (HEAD -> master)
Author: Gursimar <gursimarkaur725@gmail.com>
Date:   Tue Jan 7 13:45:04 2020 +0530

    7 jan

commit 9d6f99120899b4e8b252ad57c27a8a4796c06b20
Author: Gursimar <gursimarkaur725@gmail.com>
Date:   Mon Jan 6 19:33:49 2020 +0530

    first

ACER@Sehaj MINGW64 /e/temp (master)
$ git commit -m newname
[master 9860581] newname
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename t1 => file (100%)

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
nothing to commit, working tree clean

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   file

no changes added to commit (use "git add" and/or "git commit -a")

ACER@Sehaj MINGW64 /e/temp (master)
$ git commit -a -m "staged and commit within single command"
[master 773871e] staged and commit within single command
 1 file changed, 1 insertion(+)

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
nothing to commit, working tree clean

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   file

no changes added to commit (use "git add" and/or "git commit -a")

ACER@Sehaj MINGW64 /e/temp (master)
$ git commit -m -a "staged and commit within single command"
error: pathspec 'staged and commit within single command' did not match any file(s) known to git

ACER@Sehaj MINGW64 /e/temp (master)
$ git commit -m --a "staged and commit within single command"
error: pathspec 'staged and commit within single command' did not match any file(s) known to git

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   file

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        asassaaa.pub

no changes added to commit (use "git add" and/or "git commit -a")

ACER@Sehaj MINGW64 /e/temp (master)
$ git add .

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   asassaaa.pub
        modified:   file


ACER@Sehaj MINGW64 /e/temp (master)
$ git mv asassaaa.pub new.pub

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   file
        new file:   new.pub


ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   file
        new file:   new.pub

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        sjdjs.docx


ACER@Sehaj MINGW64 /e/temp (master)
$ git mv sjdjs.docx newdoc.docx
fatal: not under version control, source=sjdjs.docx, destination=newdoc.docx

ACER@Sehaj MINGW64 /e/temp (master)
$ git add sjdjs.docx

ACER@Sehaj MINGW64 /e/temp (master)
$ git mv sjdjs.docx newdoc.docx

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   file
        new file:   new.pub
        new file:   newdoc.docx


ACER@Sehaj MINGW64 /e/temp (master)
$ touch gi di

ACER@Sehaj MINGW64 /e/temp (master)
$ git rm gi di
fatal: pathspec 'gi' did not match any files

ACER@Sehaj MINGW64 /e/temp (master)
$ git rm gi
fatal: pathspec 'gi' did not match any files

ACER@Sehaj MINGW64 /e/temp (master)
$ git rm --cached gi
fatal: pathspec 'gi' did not match any files

ACER@Sehaj MINGW64 /e/temp (master)
$ rm --cached gi
rm: unknown option -- cached
Try 'rm --help' for more information.

ACER@Sehaj MINGW64 /e/temp (master)
$ git add .

ACER@Sehaj MINGW64 /e/temp (master)
$ git rm --cached gi
rm 'gi'

ACER@Sehaj MINGW64 /e/temp (master)
$ git ls
git: 'ls' is not a git command. See 'git --help'.

The most similar command is
        lfs

ACER@Sehaj MINGW64 /e/temp (master)
$ ls
 ccvdghc.pub   dir/   fyg.accdb   gitignoretest/  'New folder'/   newdoc.docx   ytfth.pptx
 di            file   gi          hello/           new.pub        t1.log

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   di
        modified:   file
        new file:   new.pub
        new file:   newdoc.docx

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        gi


ACER@Sehaj MINGW64 /e/temp (master)
$ git rm --cached di
rm 'di'

ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   file
        new file:   new.pub
        new file:   newdoc.docx

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        di
        gi


ACER@Sehaj MINGW64 /e/temp (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   file
        new file:   new.pub
        new file:   newdoc.docx

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        di
        gi


